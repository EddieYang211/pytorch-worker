[train] #train parameters
epoch = 160
batch_size = 56

reader_num = 1

optimizer = bert_adam
learning_rate = 1e-5
weight_decay = 0
step_size = 1
lr_multiplier = 1


[eval] #eval parameters
batch_size = 56

reader_num = 1

[data] #data parameters
train_dataset_type = JsonFromMem
train_formatter_type = MultiTaskBert

train_data_path = /data/disk1/private/zhx/ljp/data/cail
train_file_list = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14


valid_dataset_type = JsonFromMem
valid_formatter_type = MultiTaskBert

valid_data_path = /data/disk1/private/zhx/ljp/data/cail
valid_file_list = 15,16,17,18,19

test_dataset_type = JsonFromFiles
test_formatter_type = BasicBert
test_data_path = /data/disk5/private/zhx/pytorcher/data/nlp
test_file_list = test.json

recursive = False
json_format = line

max_len = 512
# max_seq_length = 512
min_freq = 20

crit_label = /data/disk1/private/zhx/ljp/data/cail/crit.txt
law_label = /data/disk1/private/zhx/ljp/data/cail/law.txt
attribute_path = /data/disk2/private/xcj/demo/data/attribute.json

task_name=law,charge,time

[model] #model parameters
model_name = MultiTaskBert

bert_path = /data/disk1/private/zhx/bert/xs/


law_outdim = 0
charge_outdim = 0


[output] #output parameters
output_time = 1
test_time = 1

model_path = /data/disk2/private/xcj/demo/model
model_name = MultiTaskBert

tensorboard_path = /data/disk2/private/xcj/demo/tensorboard

accuracy_method = SingleLabelTop1
output_function = multi_task_function
output_value = micro_precision,macro_precision 
#,macro_recall,macro_f1

tqdm_ncols = 150
